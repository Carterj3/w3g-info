version: '3'
services:
  letsencrypt:
    image: linuxserver/letsencrypt
    container_name: letsencrypt
    cap_add:
      - NET_ADMIN
    ports:
      - 443:443
      - 80:80
    # user: 1000:1000 # root needed for container init
    volumes:
      - /data/letsencrypt/config:/config
    restart:
      always
    environment:
      - PUID=1000
      - PGID=1000
      - EMAIL=admin@islanddefense.info
      - URL=islanddefense.info
      - SUBDOMAINS=www,api,dev
      - TZ=America/Los_Angeles
      - VALIDATION=http
      #- EXTRA_DOMAINS=islanddefence.info
    networks: 
      - w3g
  zookeeper:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    environment:
      LOG4J_ROOTLOGGER: ERROR, stdout
    networks:
      - w3g
  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 20000000
      KAFKA_CREATE_TOPICS_SEPARATOR: "$$'\n'"
      KAFKA_CREATE_TOPICS: |
        w3g-router-loopback:1:1:delete --config=compression.type=snappy
        id-lobby-request:1:1:delete --config=compression.type=snappy
        id-stats-request:1:1:delete --config=compression.type=snappy
        id-lobby-stats-response:1:1:delete --config=compression.type=snappy
        id-leaderboard-request:1:1:delete --config=compression.type=snappy
        id-leaderboard-response:1:1:delete --config=compression.type=snappy
        id-replay-response:1:1:delete --config=compression.type=snappy
        id-result-response:1:1:delete --config=compression.type=snappy
        w3g-router-loopback:1:1:delete --config=compression.type=snappy
      LOG4J_ROOTLOGGER: ERROR, stdout
    networks:
      - w3g
  mongodb:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_DATA_DIR: /data/db
      MONGO_LOG_DIR: /dev/null
    volumes:
        - /data/db:/data/db
    networks:
      - w3g
  w3g-ui:
    image: lesuorac/w3g-ui
    restart: unless-stopped
    depends_on:
      - letsencrypt
    networks:
      - w3g
  w3g-router-ms:
    image: lesuorac/w3g-all
    command: "/app/target/x86_64-unknown-linux-musl/release/w3g-router-ms"
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      ROCKET_ENV: production
      RUST_LOG: w3g_common=error,w3g_router_ms=debug
      KAFKA_URIS: kafka:9092
    networks:
      - w3g
  w3g-stats-ms:
    image: lesuorac/w3g-all
    command: "/app/target/x86_64-unknown-linux-musl/release/w3g-stats-ms"
    restart: unless-stopped
    depends_on:
      - kafka
      - mongodb  
    environment:  
      RUST_LOG: w3g_common=error,w3g_stats_ms=debug
      KAFKA_URIS: kafka:9092
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DB: islandDefense
      MONGO_COLLECTION: playerStats
    networks:
      - w3g
  w3g-lobby-ms:
    image: lesuorac/w3g-all
    command: "/app/target/x86_64-unknown-linux-musl/release/w3g-lobby-ms"
    restart: unless-stopped
    depends_on:
      - kafka  
    environment:  
      RUST_LOG: w3g_common=error,w3g_lobby_ms=debug
      KAFKA_URIS: kafka:9092
    networks:
      - w3g
  w3g-downloader-ms:
    image: lesuorac/w3g-all
    command: "/app/target/x86_64-unknown-linux-musl/release/w3g-downloader-ms"
    restart: unless-stopped
    depends_on:
      - kafka
      - mongodb  
    environment:  
      RUST_LOG: w3g_common=error,w3g_downloader_ms=trace
      KAFKA_URIS: kafka:9092
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DB: islandDefense
      MONGO_COLLECTION: replays
      REPLAY_PATH: /data/replays
    volumes:
        - /data/replays:/data/replays
    networks:
      - w3g
  w3g-rating-ms:
    image: lesuorac/w3g-all
    command: "/app/target/x86_64-unknown-linux-musl/release/w3g-rating-ms"
    restart: unless-stopped
    depends_on:
      - kafka
      - w3g-downloader-ms
    environment:  
      RUST_LOG: w3g_common=error,w3g_rating_ms=info
      KAFKA_URIS: kafka:9092
    networks:
      - w3g

networks:
  w3g:
    driver: bridge